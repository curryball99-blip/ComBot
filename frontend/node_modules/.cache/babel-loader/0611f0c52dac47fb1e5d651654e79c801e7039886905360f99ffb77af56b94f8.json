{"ast":null,"code":"import { isPlainObject } from './isPlainObject.mjs';\nfunction isJSONValue(value) {\n  switch (typeof value) {\n    case 'object':\n      {\n        return value === null || isJSONArray(value) || isJSONObject(value);\n      }\n    case 'string':\n    case 'number':\n    case 'boolean':\n      {\n        return true;\n      }\n    default:\n      {\n        return false;\n      }\n  }\n}\nfunction isJSONArray(value) {\n  if (!Array.isArray(value)) {\n    return false;\n  }\n  return value.every(item => isJSONValue(item));\n}\nfunction isJSONObject(obj) {\n  if (!isPlainObject(obj)) {\n    return false;\n  }\n  const keys = Reflect.ownKeys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = obj[key];\n    if (typeof key !== 'string') {\n      return false;\n    }\n    if (!isJSONValue(value)) {\n      return false;\n    }\n  }\n  return true;\n}\nexport { isJSONArray, isJSONObject, isJSONValue };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}