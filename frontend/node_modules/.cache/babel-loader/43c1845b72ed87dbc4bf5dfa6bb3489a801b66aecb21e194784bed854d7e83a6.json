{"ast":null,"code":"var _jsxFileName = \"/home/im/Druthik/clean_rag/frontend/src/components/Charts/ChartRenderer.jsx\";\nimport React from 'react';\nimport { BarChart, Bar, LineChart, Line, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\nconst ChartRenderer = ({\n  type,\n  data,\n  title,\n  config = {}\n}) => {\n  const renderChart = () => {\n    switch (type) {\n      case 'bar':\n        return /*#__PURE__*/_jsxDEV(BarChart, {\n          data: data,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: config.xKey || 'name'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: config.yKey || 'value',\n            fill: \"#0088FE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this);\n      case 'line':\n        return /*#__PURE__*/_jsxDEV(LineChart, {\n          data: data,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: config.xKey || 'name'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: config.yKey || 'value',\n            stroke: \"#8884d8\",\n            strokeWidth: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this);\n      case 'pie':\n        return /*#__PURE__*/_jsxDEV(PieChart, {\n          children: [/*#__PURE__*/_jsxDEV(Pie, {\n            data: data,\n            cx: \"50%\",\n            cy: \"50%\",\n            labelLine: false,\n            label: ({\n              name,\n              percent\n            }) => `${name} ${(percent * 100).toFixed(0)}%`,\n            outerRadius: 80,\n            fill: \"#8884d8\",\n            dataKey: config.valueKey || 'value',\n            children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: COLORS[index % COLORS.length]\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Unsupported chart type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white dark:bg-gray-800 rounded-lg p-4 border border-gray-200 dark:border-gray-600 my-4\",\n    children: [title && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: renderChart()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_c = ChartRenderer;\nexport default ChartRenderer;\nvar _c;\n$RefreshReg$(_c, \"ChartRenderer\");","map":{"version":3,"names":["React","BarChart","Bar","LineChart","Line","PieChart","Pie","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","COLORS","ChartRenderer","type","data","title","config","renderChart","children","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","xKey","yKey","fill","stroke","strokeWidth","cx","cy","labelLine","label","name","percent","toFixed","outerRadius","valueKey","map","entry","index","length","className","width","height","_c","$RefreshReg$"],"sources":["/home/im/Druthik/clean_rag/frontend/src/components/Charts/ChartRenderer.jsx"],"sourcesContent":["import React from 'react';\nimport { BarChart, Bar, LineChart, Line, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\n\nconst ChartRenderer = ({ type, data, title, config = {} }) => {\n  const renderChart = () => {\n    switch (type) {\n      case 'bar':\n        return (\n          <BarChart data={data}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey={config.xKey || 'name'} />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey={config.yKey || 'value'} fill=\"#0088FE\" />\n          </BarChart>\n        );\n      \n      case 'line':\n        return (\n          <LineChart data={data}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey={config.xKey || 'name'} />\n            <YAxis />\n            <Legend />\n            <Line type=\"monotone\" dataKey={config.yKey || 'value'} stroke=\"#8884d8\" strokeWidth={2} />\n          </LineChart>\n        );\n      \n      case 'pie':\n        return (\n          <PieChart>\n            <Pie\n              data={data}\n              cx=\"50%\"\n              cy=\"50%\"\n              labelLine={false}\n              label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n              outerRadius={80}\n              fill=\"#8884d8\"\n              dataKey={config.valueKey || 'value'}\n            >\n              {data.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n              ))}\n            </Pie>\n            <Tooltip />\n          </PieChart>\n        );\n      \n      default:\n        return <div>Unsupported chart type</div>;\n    }\n  };\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg p-4 border border-gray-200 dark:border-gray-600 my-4\">\n      {title && (\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4\">{title}</h3>\n      )}\n      <ResponsiveContainer width=\"100%\" height={300}>\n        {renderChart()}\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default ChartRenderer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}