{"ast":null,"code":"import { isUnsafeProperty } from '../_internal/isUnsafeProperty.mjs';\nimport { isPlainObject } from '../predicate/isPlainObject.mjs';\nfunction merge(target, source) {\n  const sourceKeys = Object.keys(source);\n  for (let i = 0; i < sourceKeys.length; i++) {\n    const key = sourceKeys[i];\n    if (isUnsafeProperty(key)) {\n      continue;\n    }\n    const sourceValue = source[key];\n    const targetValue = target[key];\n    if (Array.isArray(sourceValue)) {\n      if (Array.isArray(targetValue)) {\n        target[key] = merge(targetValue, sourceValue);\n      } else {\n        target[key] = merge([], sourceValue);\n      }\n    } else if (isPlainObject(sourceValue)) {\n      if (isPlainObject(targetValue)) {\n        target[key] = merge(targetValue, sourceValue);\n      } else {\n        target[key] = merge({}, sourceValue);\n      }\n    } else if (targetValue === undefined || sourceValue !== undefined) {\n      target[key] = sourceValue;\n    }\n  }\n  return target;\n}\nexport { merge };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}