{"ast":null,"code":"import { createSlice, current } from '@reduxjs/toolkit';\nimport { castDraft } from 'immer';\n\n/**\n * Unique ID of the graphical item.\n * This is used to identify the graphical item in the state and in the React tree.\n * This is required for every graphical item - it's either provided by the user or generated automatically.\n */\n\nvar initialState = {\n  cartesianItems: [],\n  polarItems: []\n};\nvar graphicalItemsSlice = createSlice({\n  name: 'graphicalItems',\n  initialState,\n  reducers: {\n    addCartesianGraphicalItem(state, action) {\n      state.cartesianItems.push(castDraft(action.payload));\n    },\n    replaceCartesianGraphicalItem(state, action) {\n      var {\n        prev,\n        next\n      } = action.payload;\n      var index = current(state).cartesianItems.indexOf(castDraft(prev));\n      if (index > -1) {\n        state.cartesianItems[index] = castDraft(next);\n      }\n    },\n    removeCartesianGraphicalItem(state, action) {\n      var index = current(state).cartesianItems.indexOf(castDraft(action.payload));\n      if (index > -1) {\n        state.cartesianItems.splice(index, 1);\n      }\n    },\n    addPolarGraphicalItem(state, action) {\n      state.polarItems.push(castDraft(action.payload));\n    },\n    removePolarGraphicalItem(state, action) {\n      var index = current(state).polarItems.indexOf(castDraft(action.payload));\n      if (index > -1) {\n        state.polarItems.splice(index, 1);\n      }\n    }\n  }\n});\nexport var {\n  addCartesianGraphicalItem,\n  replaceCartesianGraphicalItem,\n  removeCartesianGraphicalItem,\n  addPolarGraphicalItem,\n  removePolarGraphicalItem\n} = graphicalItemsSlice.actions;\nexport var graphicalItemsReducer = graphicalItemsSlice.reducer;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}