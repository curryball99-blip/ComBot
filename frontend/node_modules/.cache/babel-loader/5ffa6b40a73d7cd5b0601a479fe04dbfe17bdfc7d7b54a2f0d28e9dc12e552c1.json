{"ast":null,"code":"function partialRight(func, ...partialArgs) {\n  return partialRightImpl(func, placeholderSymbol, ...partialArgs);\n}\nfunction partialRightImpl(func, placeholder, ...partialArgs) {\n  const partialedRight = function (...providedArgs) {\n    const placeholderLength = partialArgs.filter(arg => arg === placeholder).length;\n    const rangeLength = Math.max(providedArgs.length - placeholderLength, 0);\n    const remainingArgs = providedArgs.slice(0, rangeLength);\n    let providedArgsIndex = rangeLength;\n    const substitutedArgs = partialArgs.slice().map(arg => arg === placeholder ? providedArgs[providedArgsIndex++] : arg);\n    return func.apply(this, remainingArgs.concat(substitutedArgs));\n  };\n  if (func.prototype) {\n    partialedRight.prototype = Object.create(func.prototype);\n  }\n  return partialedRight;\n}\nconst placeholderSymbol = Symbol('partialRight.placeholder');\npartialRight.placeholder = placeholderSymbol;\nexport { partialRight, partialRightImpl };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}