{"ast":null,"code":"import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nconst useSettingsStore = create(persist((set, get) => ({\n  // UI Settings\n  zoomLevel: 1.0,\n  // Actions\n  setZoomLevel: level => {\n    const clampedLevel = Math.max(0.8, Math.min(1.3, level));\n    set({\n      zoomLevel: clampedLevel\n    });\n\n    // Apply zoom using CSS custom property for better control\n    document.documentElement.style.setProperty('--zoom-scale', clampedLevel.toString());\n\n    // Apply the zoom to the root element\n    const rootElement = document.getElementById('root');\n    if (rootElement) {\n      rootElement.style.transform = `scale(${clampedLevel})`;\n      rootElement.style.transformOrigin = 'top left';\n      rootElement.style.width = `${100 / clampedLevel}%`;\n      rootElement.style.height = `${100 / clampedLevel}%`;\n    }\n  },\n  resetZoom: () => {\n    get().setZoomLevel(1.0);\n  },\n  // Initialize settings on load\n  initializeSettings: () => {\n    const {\n      zoomLevel\n    } = get();\n    get().setZoomLevel(zoomLevel);\n  }\n}), {\n  name: 'comviva-settings-store',\n  partialize: state => ({\n    zoomLevel: state.zoomLevel\n  })\n}));\nexport default useSettingsStore;","map":{"version":3,"names":["create","persist","useSettingsStore","set","get","zoomLevel","setZoomLevel","level","clampedLevel","Math","max","min","document","documentElement","style","setProperty","toString","rootElement","getElementById","transform","transformOrigin","width","height","resetZoom","initializeSettings","name","partialize","state"],"sources":["/home/im/Druthik/clean_rag/frontend/src/stores/settingsStore.js"],"sourcesContent":["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\n\nconst useSettingsStore = create(\n  persist(\n    (set, get) => ({\n      // UI Settings\n      zoomLevel: 1.0,\n      \n      // Actions\n      setZoomLevel: (level) => {\n        const clampedLevel = Math.max(0.8, Math.min(1.3, level));\n        set({ zoomLevel: clampedLevel });\n        \n        // Apply zoom using CSS custom property for better control\n        document.documentElement.style.setProperty('--zoom-scale', clampedLevel.toString());\n        \n        // Apply the zoom to the root element\n        const rootElement = document.getElementById('root');\n        if (rootElement) {\n          rootElement.style.transform = `scale(${clampedLevel})`;\n          rootElement.style.transformOrigin = 'top left';\n          rootElement.style.width = `${100 / clampedLevel}%`;\n          rootElement.style.height = `${100 / clampedLevel}%`;\n        }\n      },\n      \n      resetZoom: () => {\n        get().setZoomLevel(1.0);\n      },\n      \n      // Initialize settings on load\n      initializeSettings: () => {\n        const { zoomLevel } = get();\n        get().setZoomLevel(zoomLevel);\n      }\n    }),\n    {\n      name: 'comviva-settings-store',\n      partialize: (state) => ({ zoomLevel: state.zoomLevel }),\n    }\n  )\n);\n\nexport default useSettingsStore;"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAChC,SAASC,OAAO,QAAQ,oBAAoB;AAE5C,MAAMC,gBAAgB,GAAGF,MAAM,CAC7BC,OAAO,CACL,CAACE,GAAG,EAAEC,GAAG,MAAM;EACb;EACAC,SAAS,EAAE,GAAG;EAEd;EACAC,YAAY,EAAGC,KAAK,IAAK;IACvB,MAAMC,YAAY,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAG,EAAED,IAAI,CAACE,GAAG,CAAC,GAAG,EAAEJ,KAAK,CAAC,CAAC;IACxDJ,GAAG,CAAC;MAAEE,SAAS,EAAEG;IAAa,CAAC,CAAC;;IAEhC;IACAI,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,WAAW,CAAC,cAAc,EAAEP,YAAY,CAACQ,QAAQ,CAAC,CAAC,CAAC;;IAEnF;IACA,MAAMC,WAAW,GAAGL,QAAQ,CAACM,cAAc,CAAC,MAAM,CAAC;IACnD,IAAID,WAAW,EAAE;MACfA,WAAW,CAACH,KAAK,CAACK,SAAS,GAAG,SAASX,YAAY,GAAG;MACtDS,WAAW,CAACH,KAAK,CAACM,eAAe,GAAG,UAAU;MAC9CH,WAAW,CAACH,KAAK,CAACO,KAAK,GAAG,GAAG,GAAG,GAAGb,YAAY,GAAG;MAClDS,WAAW,CAACH,KAAK,CAACQ,MAAM,GAAG,GAAG,GAAG,GAAGd,YAAY,GAAG;IACrD;EACF,CAAC;EAEDe,SAAS,EAAEA,CAAA,KAAM;IACfnB,GAAG,CAAC,CAAC,CAACE,YAAY,CAAC,GAAG,CAAC;EACzB,CAAC;EAED;EACAkB,kBAAkB,EAAEA,CAAA,KAAM;IACxB,MAAM;MAAEnB;IAAU,CAAC,GAAGD,GAAG,CAAC,CAAC;IAC3BA,GAAG,CAAC,CAAC,CAACE,YAAY,CAACD,SAAS,CAAC;EAC/B;AACF,CAAC,CAAC,EACF;EACEoB,IAAI,EAAE,wBAAwB;EAC9BC,UAAU,EAAGC,KAAK,KAAM;IAAEtB,SAAS,EAAEsB,KAAK,CAACtB;EAAU,CAAC;AACxD,CACF,CACF,CAAC;AAED,eAAeH,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}