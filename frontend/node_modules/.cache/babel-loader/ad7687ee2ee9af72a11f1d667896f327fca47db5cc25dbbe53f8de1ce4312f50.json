{"ast":null,"code":"import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nconst useSettingsStore = create(persist((set, get) => ({\n  // UI Settings\n  zoomLevel: 1.0,\n  // AI Settings\n  temperature: 0.4,\n  maxTokens: 3072,\n  topP: 0.95,\n  model: 'llama-3.3-70b-versatile',\n  customSystemPrompt: '',\n  useCustomPrompt: false,\n  // Actions\n  setZoomLevel: level => {\n    const clampedLevel = Math.max(0.8, Math.min(1.3, level));\n    set({\n      zoomLevel: clampedLevel\n    });\n\n    // Apply zoom using CSS custom property for better control\n    document.documentElement.style.setProperty('--zoom-scale', clampedLevel.toString());\n\n    // Apply the zoom to the root element\n    const rootElement = document.getElementById('root');\n    if (rootElement) {\n      rootElement.style.transform = `scale(${clampedLevel})`;\n      rootElement.style.transformOrigin = 'top left';\n      rootElement.style.width = `${100 / clampedLevel}%`;\n      rootElement.style.height = `${100 / clampedLevel}%`;\n    }\n  },\n  resetZoom: () => {\n    get().setZoomLevel(1.0);\n    // Also reset any manual styles\n    const rootElement = document.getElementById('root');\n    if (rootElement) {\n      rootElement.style.transform = '';\n      rootElement.style.width = '';\n      rootElement.style.height = '';\n    }\n    document.documentElement.style.removeProperty('--zoom-scale');\n  },\n  // AI Settings Actions\n  setTemperature: temp => set({\n    temperature: Math.max(0, Math.min(2, temp))\n  }),\n  setMaxTokens: tokens => set({\n    maxTokens: Math.max(100, Math.min(8192, tokens))\n  }),\n  setTopP: topP => set({\n    topP: Math.max(0.1, Math.min(1, topP))\n  }),\n  setModel: model => set({\n    model\n  }),\n  setCustomSystemPrompt: prompt => set({\n    customSystemPrompt: prompt\n  }),\n  setUseCustomPrompt: use => set({\n    useCustomPrompt: use\n  }),\n  resetAISettings: () => set({\n    temperature: 0.4,\n    maxTokens: 3072,\n    topP: 0.95,\n    model: 'llama-3.3-70b-versatile',\n    customSystemPrompt: '',\n    useCustomPrompt: false\n  }),\n  // Initialize settings on load\n  initializeSettings: () => {\n    const {\n      zoomLevel\n    } = get();\n    get().setZoomLevel(zoomLevel);\n  }\n}), {\n  name: 'comviva-settings-store',\n  partialize: state => ({\n    zoomLevel: state.zoomLevel,\n    temperature: state.temperature,\n    maxTokens: state.maxTokens,\n    topP: state.topP,\n    model: state.model,\n    customSystemPrompt: state.customSystemPrompt,\n    useCustomPrompt: state.useCustomPrompt\n  })\n}));\nexport default useSettingsStore;","map":{"version":3,"names":["create","persist","useSettingsStore","set","get","zoomLevel","temperature","maxTokens","topP","model","customSystemPrompt","useCustomPrompt","setZoomLevel","level","clampedLevel","Math","max","min","document","documentElement","style","setProperty","toString","rootElement","getElementById","transform","transformOrigin","width","height","resetZoom","removeProperty","setTemperature","temp","setMaxTokens","tokens","setTopP","setModel","setCustomSystemPrompt","prompt","setUseCustomPrompt","use","resetAISettings","initializeSettings","name","partialize","state"],"sources":["/home/ubuntu/Ravi/ComBot/frontend/src/stores/settingsStore.js"],"sourcesContent":["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\n\nconst useSettingsStore = create(\n  persist(\n    (set, get) => ({\n      // UI Settings\n      zoomLevel: 1.0,\n      \n      // AI Settings\n      temperature: 0.4,\n      maxTokens: 3072,\n      topP: 0.95,\n      model: 'llama-3.3-70b-versatile',\n      customSystemPrompt: '',\n      useCustomPrompt: false,\n      \n      // Actions\n      setZoomLevel: (level) => {\n        const clampedLevel = Math.max(0.8, Math.min(1.3, level));\n        set({ zoomLevel: clampedLevel });\n        \n        // Apply zoom using CSS custom property for better control\n        document.documentElement.style.setProperty('--zoom-scale', clampedLevel.toString());\n        \n        // Apply the zoom to the root element\n        const rootElement = document.getElementById('root');\n        if (rootElement) {\n          rootElement.style.transform = `scale(${clampedLevel})`;\n          rootElement.style.transformOrigin = 'top left';\n          rootElement.style.width = `${100 / clampedLevel}%`;\n          rootElement.style.height = `${100 / clampedLevel}%`;\n        }\n      },\n      \n      resetZoom: () => {\n        get().setZoomLevel(1.0);\n        // Also reset any manual styles\n        const rootElement = document.getElementById('root');\n        if (rootElement) {\n          rootElement.style.transform = '';\n          rootElement.style.width = '';\n          rootElement.style.height = '';\n        }\n        document.documentElement.style.removeProperty('--zoom-scale');\n      },\n      \n      // AI Settings Actions\n      setTemperature: (temp) => set({ temperature: Math.max(0, Math.min(2, temp)) }),\n      setMaxTokens: (tokens) => set({ maxTokens: Math.max(100, Math.min(8192, tokens)) }),\n      setTopP: (topP) => set({ topP: Math.max(0.1, Math.min(1, topP)) }),\n      setModel: (model) => set({ model }),\n      setCustomSystemPrompt: (prompt) => set({ customSystemPrompt: prompt }),\n      setUseCustomPrompt: (use) => set({ useCustomPrompt: use }),\n      \n      resetAISettings: () => set({\n        temperature: 0.4,\n        maxTokens: 3072,\n        topP: 0.95,\n        model: 'llama-3.3-70b-versatile',\n        customSystemPrompt: '',\n        useCustomPrompt: false\n      }),\n      \n      // Initialize settings on load\n      initializeSettings: () => {\n        const { zoomLevel } = get();\n        get().setZoomLevel(zoomLevel);\n      }\n    }),\n    {\n      name: 'comviva-settings-store',\n      partialize: (state) => ({ \n        zoomLevel: state.zoomLevel,\n        temperature: state.temperature,\n        maxTokens: state.maxTokens,\n        topP: state.topP,\n        model: state.model,\n        customSystemPrompt: state.customSystemPrompt,\n        useCustomPrompt: state.useCustomPrompt\n      }),\n    }\n  )\n);\n\nexport default useSettingsStore;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}