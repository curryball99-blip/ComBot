{"ast":null,"code":"import { isUnsafeProperty } from '../_internal/isUnsafeProperty.mjs';\nimport { isObjectLike } from '../compat/predicate/isObjectLike.mjs';\nfunction mergeWith(target, source, merge) {\n  const sourceKeys = Object.keys(source);\n  for (let i = 0; i < sourceKeys.length; i++) {\n    const key = sourceKeys[i];\n    if (isUnsafeProperty(key)) {\n      continue;\n    }\n    const sourceValue = source[key];\n    const targetValue = target[key];\n    const merged = merge(targetValue, sourceValue, key, target, source);\n    if (merged !== undefined) {\n      target[key] = merged;\n    } else if (Array.isArray(sourceValue)) {\n      target[key] = mergeWith(targetValue !== null && targetValue !== void 0 ? targetValue : [], sourceValue, merge);\n    } else if (isObjectLike(targetValue) && isObjectLike(sourceValue)) {\n      target[key] = mergeWith(targetValue !== null && targetValue !== void 0 ? targetValue : {}, sourceValue, merge);\n    } else if (targetValue === undefined || sourceValue !== undefined) {\n      target[key] = sourceValue;\n    }\n  }\n  return target;\n}\nexport { mergeWith };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}