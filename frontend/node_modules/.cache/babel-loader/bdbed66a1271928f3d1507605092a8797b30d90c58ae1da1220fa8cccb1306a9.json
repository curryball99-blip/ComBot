{"ast":null,"code":"const deburrMap = new Map(Object.entries({\n  Æ: 'Ae',\n  Ð: 'D',\n  Ø: 'O',\n  Þ: 'Th',\n  ß: 'ss',\n  æ: 'ae',\n  ð: 'd',\n  ø: 'o',\n  þ: 'th',\n  Đ: 'D',\n  đ: 'd',\n  Ħ: 'H',\n  ħ: 'h',\n  ı: 'i',\n  Ĳ: 'IJ',\n  ĳ: 'ij',\n  ĸ: 'k',\n  Ŀ: 'L',\n  ŀ: 'l',\n  Ł: 'L',\n  ł: 'l',\n  ŉ: \"'n\",\n  Ŋ: 'N',\n  ŋ: 'n',\n  Œ: 'Oe',\n  œ: 'oe',\n  Ŧ: 'T',\n  ŧ: 't',\n  ſ: 's'\n}));\nfunction deburr(str) {\n  str = str.normalize('NFD');\n  let result = '';\n  for (let i = 0; i < str.length; i++) {\n    var _deburrMap$get;\n    const char = str[i];\n    if (char >= '\\u0300' && char <= '\\u036f' || char >= '\\ufe20' && char <= '\\ufe23') {\n      continue;\n    }\n    result += (_deburrMap$get = deburrMap.get(char)) !== null && _deburrMap$get !== void 0 ? _deburrMap$get : char;\n  }\n  return result;\n}\nexport { deburr };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}